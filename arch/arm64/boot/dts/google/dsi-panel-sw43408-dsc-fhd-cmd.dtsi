/* Copyright (c) 2017, The Linux Foundation. All rights reserved.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 and
 * only version 2 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 */

&mdss_mdp {
	dsi_sw43408_dsc_fhd_cmd: qcom,mdss_dsi_sw43408_dsc_fhd_cmd {
		qcom,mdss-dsi-panel-name = "sw43408 cmd mode dsc dsi panel";
		qcom,mdss-dsi-panel-type = "dsi_cmd_mode";
		qcom,mdss-dsi-virtual-channel-id = <0>;
		qcom,mdss-dsi-stream = <0>;
		qcom,mdss-dsi-bpp = <24>;
		qcom,mdss-dsi-color-order = "rgb_swap_rgb";
		qcom,mdss-dsi-underflow-color = <0xff>;
		qcom,mdss-dsi-border-color = <0>;
		qcom,mdss-dsi-traffic-mode = "burst_mode";
		qcom,mdss-dsi-lane-map = "lane_map_0123";
		/* qcom,partial-update-enabled = "single-roi"; */
		/* qcom,panel-roi-alignment = <1440 16 1440 16 1440 16>; */
		qcom,mdss-dsi-lane-0-state;
		qcom,mdss-dsi-lane-1-state;
		qcom,mdss-dsi-lane-2-state;
		qcom,mdss-dsi-lane-3-state;
		qcom,mdss-dsi-reset-sequence = <1 10>, <0 10>, <1 10>;
		qcom,mdss-dsi-dma-trigger = "trigger_sw";
		qcom,mdss-dsi-mdp-trigger = "none";
		qcom,mdss-dsi-te-pin-select = <1>;
		qcom,mdss-dsi-wr-mem-start = <0x2c>;
		qcom,mdss-dsi-wr-mem-continue = <0x3c>;
		qcom,mdss-dsi-te-dcs-command = <1>;
		qcom,mdss-dsi-te-check-enable;
		qcom,mdss-dsi-te-using-te-pin;
		// todo: salidoa qcom,mdss-dsi-lp11-init;
		qcom,mdss-dsi-tx-eot-append;
		qcom,mdss-dsi-force-clock-lane-hs = <1>;

		qcom,mdss-pan-physical-width-dimension = <62>;
		qcom,mdss-pan-physical-height-dimension = <124>;

		qcom,mdss-dsi-hs-pps;
		qcom,mdss-dsi-init-delay-us = <10000>;

		qcom,mdss-dsi-bl-pmic-control-type = "bl_ctrl_dcs";
		qcom,mdss-dsi-bl-min-level = <0xf0>;
		qcom,mdss-dsi-bl-max-level = <0x332>;

		qcom,mdss-dsi-display-timings {
			timing@0 {
				qcom,mdss-dsi-panel-framerate = <60>;
				qcom,mdss-dsi-panel-width = <1080>;
				qcom,mdss-dsi-panel-height = <2160>;
				qcom,mdss-dsi-h-front-porch = <20>;
				qcom,mdss-dsi-h-back-porch = <20>;
				qcom,mdss-dsi-h-pulse-width = <32>;
				qcom,mdss-dsi-h-sync-skew = <0>;
				qcom,mdss-dsi-v-back-porch = <20>;
				qcom,mdss-dsi-v-front-porch = <20>;
				qcom,mdss-dsi-v-pulse-width = <4>;
				qcom,mdss-dsi-h-left-border = <0>;
				qcom,mdss-dsi-h-right-border = <0>;
				qcom,mdss-dsi-v-top-border = <0>;
				qcom,mdss-dsi-v-bottom-border = <0>;
				/* TODO salidoa: please implement mdss-dsi-init-delay-us
				 * per Documentation.
				 */
				qcom,mdss-dsi-init-delay-us = <10000>;
				qcom,mdss-dsi-on-command = [

					15 01 00 00 00 00 02 35 00

					39 01 00 00 00 00 03 53 0C 30

					05 01 00 00 C8 00 01 11
					/* TODO: delay specified as 100ms. 0xC8 translates to 200 ms */

					/* PPS */
					07 01 00 00 00 00 01 11

					0A 01 00 00 00 00 80 11
						00 00 89 30 80 08 70 04
						38 00 10 02 1C 02 1C 02
						00 02 0E 00 20 01 84 00
						07 00 0C 06 67 06 5C 18
						00 10 F0 03 0C 20 00 06
						0B 0B 33 0E 1C 2A 38 46
						54 62 69 70 77 79 7B 7D
						7E 01 02 01 00 09 40 09
						BE 19 FC 19 FA 19 F8 1A
						38 1A 78 1A B6 2A F6 2B
						34 2B 74 3B 74 6B F4 00
						00 00 00 00 00 00 00 00
						00 00 00 00 00 00 00 00
						00 00 00 00 00 00 00 00
						00 00 00 00 00 00 00 00
						00 00 00 00 00 00 00

					15 01 00 00 00 00 02 B0 AC

					15 01 00 00 00 00 02 26 02

					/* Edge Round coordination loaded from Flash to SRAM */
					15 01 00 00 00 00 02 B0 AC /* MCS Access */

					39 01 00 00 00 00 07 F7
						01 49 0C FF 7F 04 /* Flash memory power on */

					39 01 00 00 00 00 06 CC
						02 00 00 00 41 /* Flash memory type check */

					15 01 00 00 00 00 02 EC 10 /* Data read enable from Flash */
					15 01 00 00 00 00 02 F3 AC /* Don't load OTP */


					/* Edge Round Blur(Anti-Aliasing) Func. ON */
					15 01 00 00 00 00 02 B0 55 /* MLPIS Access */

					39 01 00 00 00 00 0C D7
						03 02 00 02 00 01 00 01
						69 01 00 /* Edge Round Control1 */

					39 01 00 00 00 00 0E D8
						00 02 00 02 00 02 00 01
						00 01 00 02 1C /* Edge Round Control2 */

					39 01 00 00 00 00 07 55
						34 70 CB 04 70 DB /* Edge Round function on */

					05 01 00 00 00 00 01 29
				];
				qcom,mdss-dsi-off-command = [
					05 01 00 00 00 00 01 28
					05 01 00 00 64 00 01 10
				];
				qcom,mdss-dsi-on-command-state = "dsi_lp_mode";
				qcom,mdss-dsi-off-command-state = "dsi_lp_mode";
				qcom,mdss-dsi-h-sync-pulse = <0>;
				qcom,compression-mode = "dsc";
				qcom,mdss-dsc-slice-height = <16>;
				qcom,mdss-dsc-slice-width = <540>;
				qcom,mdss-dsc-slice-per-pkt = <1>;
				qcom,mdss-dsc-bit-per-component = <8>;
				qcom,mdss-dsc-bit-per-pixel = <8>;
				qcom,mdss-dsc-block-prediction-enable;

				/* 2xLM, 2xDSC Enc, 1xDSI Intf */
				qcom,display-topology = <2 2 1>;
				qcom,default-topology-index = <0>;
			};
		};

	};
};

