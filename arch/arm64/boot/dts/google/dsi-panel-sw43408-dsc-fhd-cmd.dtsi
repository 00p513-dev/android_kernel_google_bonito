/* Copyright (c) 2017, The Linux Foundation. All rights reserved.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 and
 * only version 2 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 */

&mdss_mdp {
	dsi_sw43408_dsc_fhd_cmd: qcom,mdss_dsi_sw43408_dsc_fhd_cmd {
		qcom,mdss-dsi-panel-name = "sw43408 cmd mode dsc dsi panel";
		qcom,mdss-dsi-panel-type = "dsi_cmd_mode";
		qcom,mdss-dsi-virtual-channel-id = <0>;
		qcom,mdss-dsi-stream = <0>;
		qcom,mdss-dsi-bpp = <24>;
		qcom,mdss-dsi-color-order = "rgb_swap_rgb";
		qcom,mdss-dsi-underflow-color = <0xff>;
		qcom,mdss-dsi-border-color = <0>;
		qcom,mdss-dsi-traffic-mode = "burst_mode";
		qcom,mdss-dsi-lane-map = "lane_map_0123";
		qcom,mdss-dsi-bllp-eof-power-mode;
		qcom,mdss-dsi-bllp-power-mode;
		/* qcom,partial-update-enabled = "single-roi"; */
		/* qcom,panel-roi-alignment = <1440 16 1440 16 1440 16>; */
		qcom,mdss-dsi-lane-0-state;
		qcom,mdss-dsi-lane-1-state;
		qcom,mdss-dsi-lane-2-state;
		qcom,mdss-dsi-lane-3-state;
		qcom,mdss-dsi-reset-sequence = <1 10>, <0 10>, <1 10>;
		qcom,mdss-dsi-dma-trigger = "trigger_sw";
		qcom,mdss-dsi-mdp-trigger = "none";
		qcom,mdss-dsi-te-pin-select = <1>;
		qcom,mdss-dsi-wr-mem-start = <0x2c>;
		qcom,mdss-dsi-wr-mem-continue = <0x3c>;
		qcom,mdss-dsi-te-dcs-command = <1>;
		qcom,mdss-dsi-te-check-enable;
		qcom,mdss-dsi-te-using-te-pin;
		// todo: salidoa qcom,mdss-dsi-lp11-init;
		qcom,mdss-dsi-tx-eot-append;
		qcom,mdss-dsi-force-clock-lane-hs = <1>;

		/* TODO: salidoa: Check if these lp-mode settings belong in
		 * the timing section
		 */
		qcom,mdss-dsi-lp-mode-on = [15 01 00 00 00 00 02 53 08];
		qcom,mdss-dsi-lp-mode-off = [15 01 00 00 00 00 02 53 00];
		qcom,mdss-dsi-lp-change-state = "dsi_hs_mode";
		qcom,mode-control-dsi-state = "dsi_lp_mode";

		qcom,alpm-off-command = [
			05 01 00 00 00 00 01 38    /* IDLE off */
		];
		qcom,alpm-low-command = [
			05 01 00 00 00 00 01 39    /* IDLE on */
			15 01 00 00 00 00 02 51 40 /* brightness control */
		];
		qcom,alpm-high-command = [
			05 01 00 00 00 00 01 39    /* IDLE on */
			15 01 00 00 00 00 02 51 80 /* brightness control */
		];
		qcom,mdss-pan-physical-width-dimension = <68>;
		qcom,mdss-pan-physical-height-dimension = <136>;

		qcom,mdss-dsi-hs-pps;
		qcom,mdss-dsi-init-delay-us = <10000>;
		qcom,mdss-dsi-display-timings {
			timing@0 {
				qcom,mdss-dsi-panel-framerate = <60>;
				qcom,mdss-dsi-panel-width = <1080>;
				qcom,mdss-dsi-panel-height = <2160>;
				qcom,mdss-dsi-h-front-porch = <20>;
				qcom,mdss-dsi-h-back-porch = <20>;
				qcom,mdss-dsi-h-pulse-width = <32>;
				qcom,mdss-dsi-h-sync-skew = <0>;
				qcom,mdss-dsi-v-back-porch = <20>;
				qcom,mdss-dsi-v-front-porch = <20>;
				qcom,mdss-dsi-v-pulse-width = <4>;
				qcom,mdss-dsi-h-left-border = <0>;
				qcom,mdss-dsi-h-right-border = <0>;
				qcom,mdss-dsi-v-top-border = <0>;
				qcom,mdss-dsi-v-bottom-border = <0>;
				/* TODO salidoa: please implement mdss-dsi-init-delay-us
				 * per Documentation.
				 */
				qcom,mdss-dsi-init-delay-us = <10000>;
				qcom,mdss-dsi-on-command = [
					07 01 00 00 00 00 01 11
					15 01 00 00 00 00 02 B0 AC
					39 01 00 00 00 00 05 2A 00 00 04 37
					39 01 00 00 00 00 05 2B 00 00 08 6F
					39 01 00 00 00 00 0E C8
						0B 0B 0B 0B 0B 00 02 01
						0B 07 0A 09 08
					39 01 00 00 00 00 0E C9
						0B 0B 0B 0B 0B 00 02 01
						0B 07 0A 09 08
					// Duty:  6VST
					39 01 00 00 00 00 08 E5
						00 3E 00 3F 00 3F 10
					39 01 00 00 00 00 33 E6
						20 03 30 20 00 33 20 00
						33 20 00 33 20 00 33 20
						00 33 10 BF 73 10 BF 20
						00 33 20 00 33 20 00 33
						20 00 33 20 00 33 10 BF
						73 10 BF 73 01 E4 4F 01
						E4 4F
					39 01 00 00 00 00 1F E7
						20 00 33 20 00 33 02 1C
						17 20 00 33 20 8A A9 20
						00 33 20 00 33 02 1C 17
						20 00 33 20 8A A9
					39 01 00 00 00 00 0D B4
						2A 02 25 22 41 41 41 0A
						10 50 11 00
					// 1VST? 
					39 01 00 00 00 00 2A B5
						75 60 2D 5D 80 00 0A 0B
						00 05 0B 00 80 0D 0E 40
						00 0C 00 16 00 B8 00 80
						0D 0E 40 00 0C 00 16 00
						B8 00 81 00 03 00 00 00
						00
					//OSC 48.9MHz 60 Hz
					39 01 00 00 00 00 0C B6
						60 30 00 50 20 00 50 20
						40 14 14
					39 01 00 00 00 00 06 B7 00 05 00 04 37
					39 01 00 00 00 00 13 BF
						30 FF 11 33 00 00 00 00
						00 00 00 00 00 00 33 01
						00 20
					39 01 00 00 00 00 04 C0 02 09 0F
					39 01 00 00 00 00 19 C2
						70 8A 0A 0A 44 8C 4C 44
						8C 4C 0A ED AD 54 24 00
						00 64 24 CB 64 97 17 64
					39 01 00 00 00 00 12 C3
						10 15 1F B9 AD 4D B0 50
						B7 57 22 02 C8 20 83 0C
						07
					39 01 00 00 00 00 12 C4
						14 34 13 22 32 22 22 22
						24 24 30 22 22 33 22 43
						12
					// Command-video switch setting
					39 01 00 00 00 00 06 C6 0F 03 03 00 00

					39 01 00 00 00 00 05 CA 08 99 18 05
					39 01 00 00 00 00 0F CB
						80 5C 07 1B 34 54 4F 5A
						33 19 60 00 00 00
					39 01 00 00 00 00 13 CD
						00 00 00 2A 2A 2A 2A 2A
						2E 2E 32 32 32 23 2A 32
						23 32
					15 01 00 00 00 00 02 26 02
					39 01 00 00 00 00 19 D0
						E5 20 20 20 20 42 00 00
						00 E5 42 00 00 00 08 00
						C4 0D 0D 93 93 20 00 00
					39 01 00 00 00 00 2D D1
						BF A3 47 0B D3 6A D3 73
						73 63 94 03 FF FF 7F AF
						BF 7F FF 7F 05 FF 7F FF
						7F 58 01 AF 4F FF FF FF
						F9 F3 ED FF E7 E1 DB D5
						3F CF C9 C3
					39 01 00 00 00 00 37 DF
						30 A0 3F 2A 40 8D 92 BA
						CA 30 8B 3E F3 7C 8E 91
						BB CD 3F DC 3F B0 9A 92
						8C B7 C4 00 EF 3F 7A 9D
						6A 8F A8 BC 80 4D 3E 83
						7E 74 83 AD A8 00 F3 3F
						10 7C 80 70 B2 BA
					39 01 00 00 00 00 37 E0
						30 A6 3F 7A 2D B0 BA D4
						DE 30 93 3E 83 D5 C4 BC
						D5 DF 3F DF 3F 10 E0 D0
						C2 D6 E0 00 EF 3F 7A 9D
						6A 8F A8 BC 80 4D 3E 83
						7E 74 83 AD A8 00 F3 3F
						10 7C 80 70 B2 BA
					39 01 00 00 00 00 37 E1
						30 D8 3F AB AE AF AB CA
						DF 30 DF 3F BF B5 E6 C0
						CE C5 BF 30 3F B7 AB BE
						8F B3 C7 00 EF 3F 7A 9D
						6A 8F A8 BC 80 4D 3E 83
						7E 74 83 AD A8 00 F3 3F
						10 7C 80 70 B2 BA
					39 01 00 00 00 00 37 E2
						30 37 7F C1 C9 C2 B8 C3
						C4 30 1E 7F D1 CD C7 BA
						C6 C5 3F 95 7F D2 CB C0
						B1 BD BD 00 eF 3F 7A 9D
						6A 8F A8 BC 80 4D 3E 83
						7E 74 83 AD A8 00 FF 3F
						10 7C 80 70 B2 BA
					39 01 00 00 00 00 37 E3
						30 EF 3F 7A 9D 6A 8F A8
						BC 30 4D 3E 83 7E 74 83
						AD A8 3F F3 3F 10 7C 80
						70 B2 BA 00 EF 3F 7A 9D
						6A 8F A8 BC 80 4D 3E 83
						7E 74 83 AD A8 00 F3 3F
						10 7C 80 70 B2 BA
					39 01 00 00 00 00 1F E4
						00 EF 3F 7A 9D 6A 8F A8
						BC 80 4D 3E 83 7E 74 83
						AD A8 00 F3 3F 10 7C 80
						70 B2 BA 20 01 CC
					// TE Enable: 0x39 0xCE 0x27 0x10 0x08 0x80
					39 01 00 00 00 00 05 CE 27 10 08 80
					15 01 00 00 00 00 02 35 00
					39 01 00 00 00 00 03 51 03 FF
					39 01 00 00 00 00 03 53 0C 30
					39 01 00 00 00 00 07 55
						04 70 DB 04 70 DB
					15 01 00 00 00 00 02 B0 AC
					// TODO salidoa: No delay between 11/29? or delay? 200 msec>?
					05 01 00 00 C8 00 01 11
					// TODO salidoa: write protect twice? 15 01 00 00 00 00 02 B0 AC
					// TODO salidoa: check delay after 29?
					05 01 00 00 C8 00 01 29
				];
				qcom,mdss-dsi-off-command = [
					05 01 00 00 00 00 01 28
					05 01 00 00 64 00 01 10
				];
				qcom,mdss-dsi-on-command-state = "dsi_lp_mode";
				qcom,mdss-dsi-off-command-state = "dsi_lp_mode";
				qcom,mdss-dsi-h-sync-pulse = <0>;
				qcom,compression-mode = "dsc";
				qcom,mdss-dsc-slice-height = <16>;
				qcom,mdss-dsc-slice-width = <540>;
				qcom,mdss-dsc-slice-per-pkt = <1>;
				qcom,mdss-dsc-bit-per-component = <8>;
				qcom,mdss-dsc-bit-per-pixel = <8>;
				qcom,mdss-dsc-block-prediction-enable;

			};
		};

	};
};

